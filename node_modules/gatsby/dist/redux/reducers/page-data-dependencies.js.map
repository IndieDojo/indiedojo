{"version":3,"sources":["../../../src/redux/reducers/page-data-dependencies.js"],"names":["_","require","module","exports","state","nodes","connections","action","type","payload","path","nodeId","existingPaths","newPaths","uniq","concat","connection","mapValues","difference","paths"],"mappings":";;AAAA,IAAMA,IAAIC,iBAAV;;AAEAC,OAAOC,OAAP,GAAiB,YAAoD;AAAA,MAAnDC,KAAmD,uEAA3C,EAAEC,OAAO,EAAT,EAAaC,aAAa,EAA1B,EAA2C;AAAA,MAAXC,MAAW;;AACnE,UAAQA,OAAOC,IAAf;AACE;AACE,aAAO,EAAEH,OAAO,EAAT,EAAaC,aAAa,EAA1B,EAAP;AACF;AACE,UAAIC,OAAOE,OAAP,CAAeC,IAAf,OAAJ,EAAgC;AAC9B,eAAON,KAAP;AACD;;AAED;AACA,UAAIG,OAAOE,OAAP,CAAeE,MAAnB,EAA2B;AACzB,YAAIC,gBAAgB,EAApB;AACA,YAAIR,MAAMC,KAAN,CAAYE,OAAOE,OAAP,CAAeE,MAA3B,CAAJ,EAAwC;AACtCC,0BAAgBR,MAAMC,KAAN,CAAYE,OAAOE,OAAP,CAAeE,MAA3B,CAAhB;AACD;AACD,YAAME,WAAWb,EAAEc,IAAF,CAAOF,cAAcG,MAAd,CAAqBR,OAAOE,OAAP,CAAeC,IAApC,CAAP,CAAjB;AACAN,cAAMC,KAAN,CAAYE,OAAOE,OAAP,CAAeE,MAA3B,IAAqCE,QAArC;AACD;;AAED;AACA,UAAIN,OAAOE,OAAP,CAAeO,UAAnB,EAA+B;AAC7B,YAAIJ,iBAAgB,EAApB;AACA,YAAIR,MAAME,WAAN,CAAkBC,OAAOE,OAAP,CAAeO,UAAjC,CAAJ,EAAkD;AAChDJ,2BAAgBR,MAAME,WAAN,CAAkBC,OAAOE,OAAP,CAAeO,UAAjC,CAAhB;AACD;AACD,YAAMH,YAAWb,EAAEc,IAAF,CAAOF,eAAcG,MAAd,CAAqBR,OAAOE,OAAP,CAAeC,IAApC,CAAP,CAAjB;AACAN,cAAME,WAAN,CAAkBC,OAAOE,OAAP,CAAeO,UAAjC,IAA+CH,SAA/C;AACD;;AAED,aAAOT,KAAP;AACF;AACEA,YAAMC,KAAN,GAAcL,EAAEiB,SAAF,CAAYb,MAAMC,KAAlB,EAAyB;AAAA,eACrCL,EAAEkB,UAAF,CAAaC,KAAb,EAAoBZ,OAAOE,OAAP,CAAeU,KAAnC,CADqC;AAAA,OAAzB,CAAd;AAGAf,YAAME,WAAN,GAAoBN,EAAEiB,SAAF,CAAYb,MAAME,WAAlB,EAA+B;AAAA,eACjDN,EAAEkB,UAAF,CAAaC,KAAb,EAAoBZ,OAAOE,OAAP,CAAeU,KAAnC,CADiD;AAAA,OAA/B,CAApB;;AAIA,aAAOf,KAAP;AACF;AACE,aAAOA,KAAP;AAvCJ;AAyCD,CA1CD","file":"page-data-dependencies.js","sourcesContent":["const _ = require(`lodash`)\n\nmodule.exports = (state = { nodes: {}, connections: {} }, action) => {\n  switch (action.type) {\n    case `DELETE_CACHE`:\n      return { nodes: {}, connections: {} }\n    case `CREATE_PAGE_DEPENDENCY`:\n      if (action.payload.path === ``) {\n        return state\n      }\n\n      // If this nodeId not set yet.\n      if (action.payload.nodeId) {\n        let existingPaths = []\n        if (state.nodes[action.payload.nodeId]) {\n          existingPaths = state.nodes[action.payload.nodeId]\n        }\n        const newPaths = _.uniq(existingPaths.concat(action.payload.path))\n        state.nodes[action.payload.nodeId] = newPaths\n      }\n\n      // If this connection not set yet.\n      if (action.payload.connection) {\n        let existingPaths = []\n        if (state.connections[action.payload.connection]) {\n          existingPaths = state.connections[action.payload.connection]\n        }\n        const newPaths = _.uniq(existingPaths.concat(action.payload.path))\n        state.connections[action.payload.connection] = newPaths\n      }\n\n      return state\n    case `DELETE_PAGES_DEPENDENCIES`:\n      state.nodes = _.mapValues(state.nodes, paths =>\n        _.difference(paths, action.payload.paths)\n      )\n      state.connections = _.mapValues(state.connections, paths =>\n        _.difference(paths, action.payload.paths)\n      )\n\n      return state\n    default:\n      return state\n  }\n}\n"]}