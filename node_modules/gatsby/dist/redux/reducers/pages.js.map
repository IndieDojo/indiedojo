{"version":3,"sources":["../../../src/redux/reducers/pages.js"],"names":["_","require","normalize","module","exports","state","action","type","payload","component","plugin","name","console","log","error","Error","pluginCreator___NODE","index","findIndex","p","path","slice","concat","filter"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,IAAIC,iBAAV;AACA,IAAMC,YAAYD,yBAAlB;;AAEAE,OAAOC,OAAP,GAAiB,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACvC,UAAQA,OAAOC,IAAf;AACE;AACE,aAAO,EAAP;AACF;AACED,aAAOE,OAAP,CAAeC,SAAf,GAA2BP,UAAUI,OAAOE,OAAP,CAAeC,SAAzB,CAA3B;AACA,UAAI,CAACH,OAAOI,MAAR,IAAkB,CAACJ,OAAOI,MAAP,CAAcC,IAArC,EAA2C;AACzCC,gBAAQC,GAAR;AACAD,gBAAQE,KAAR,CAAc,yBAAeR,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAd;AACAM,gBAAQC,GAAR;AACA,cAAM,IAAIE,KAAJ,qGAAN;AAED;AACDT,aAAOE,OAAP,CAAeQ,oBAAf,eAAgDV,OAAOI,MAAP,CAAcC,IAA9D;AACA,UAAMM,QAAQjB,EAAEkB,SAAF,CAAYb,KAAZ,EAAmB;AAAA,eAAKc,EAAEC,IAAF,KAAWd,OAAOE,OAAP,CAAeY,IAA/B;AAAA;AACjC;AACA;AAFc,OAAd,CAGA,IAAIH,UAAU,CAAC,CAAf,EAAkB;AAChB,0DACKZ,MACAgB,KADA,CACM,CADN,EACSJ,KADT,EAEAK,MAFA,CAEOhB,OAAOE,OAFd,EAGAc,MAHA,CAGOjB,MAAMgB,KAAN,CAAYJ,QAAQ,CAApB,CAHP,CADL;AAMD,OAPD,MAOO;AACL,0DAAWZ,MAAMiB,MAAN,CAAahB,OAAOE,OAApB,CAAX;AACD;AACH;AACE,aAAOH,MAAMkB,MAAN,CAAa;AAAA,eAAKJ,EAAEC,IAAF,KAAWd,OAAOE,OAAP,CAAeY,IAA/B;AAAA,OAAb,CAAP;AACF;AACE,aAAOf,KAAP;AA7BJ;AA+BD,CAhCD","file":"pages.js","sourcesContent":["const _ = require(`lodash`)\nconst normalize = require(`normalize-path`)\n\nmodule.exports = (state = [], action) => {\n  switch (action.type) {\n    case `DELETE_CACHE`:\n      return []\n    case `CREATE_PAGE`:\n      action.payload.component = normalize(action.payload.component)\n      if (!action.plugin && !action.plugin.name) {\n        console.log(``)\n        console.error(JSON.stringify(action, null, 4))\n        console.log(``)\n        throw new Error(`Pages can only be created by plugins. There wasn't a plugin set\n        when creating this page.`)\n      }\n      action.payload.pluginCreator___NODE = `Plugin ${action.plugin.name}`\n      const index = _.findIndex(state, p => p.path === action.payload.path)\n      // If the path already exists, overwrite it.\n      // Otherwise, add it to the end.\n      if (index !== -1) {\n        return [\n          ...state\n            .slice(0, index)\n            .concat(action.payload)\n            .concat(state.slice(index + 1)),\n        ]\n      } else {\n        return [...state.concat(action.payload)]\n      }\n    case `DELETE_PAGE`:\n      return state.filter(p => p.path !== action.payload.path)\n    default:\n      return state\n  }\n}\n"]}