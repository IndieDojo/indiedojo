{"version":3,"sources":["../../src/utils/build-css.js"],"names":["module","exports","program","directory","compilerConfig","resolve","reject","run","err","unlinkSync","ensureFile"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP;AAAA,wEAAiB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,qBADO,GACOD,OADP,CACPC,SADO;AAAA;AAAA,mBAGc,uBAAcD,OAAd,EAAuBC,SAAvB,cAHd;;AAAA;AAGTC,0BAHS;AAAA,6CAKR,uBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,qCAAQF,eAAeC,OAAf,EAAR,EAAkCE,GAAlC,CAAsC,eAAO;AAC3C,oBAAIC,GAAJ,EAAS;AACPF,yBAAOE,GAAP;AACD;;AAED;AACA,kCAAGC,UAAH,CAAiBN,SAAjB;;AAEA;AACA;AAHA,kBAIA,kBAAGO,UAAH,CAAiBP,SAAjB,yBAAgD,eAAO;AACrDE,0BAAQG,GAAR;AACD,iBAFD;AAGD,eAbD;AAcD,aAfM,CALQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","file":"build-css.js","sourcesContent":["/* @flow */\nimport webpack from \"webpack\"\nimport fs from \"fs-extra\"\nimport Promise from \"bluebird\"\nimport webpackConfig from \"./webpack.config\"\n\nmodule.exports = async (program: any) => {\n  const { directory } = program\n\n  const compilerConfig = await webpackConfig(program, directory, `build-css`)\n\n  return new Promise((resolve, reject) => {\n    webpack(compilerConfig.resolve()).run(err => {\n      if (err) {\n        reject(err)\n      }\n\n      // We don't want any javascript produced by this step in the process.\n      fs.unlinkSync(`${directory}/public/bundle-for-css.js`)\n\n      // Ensure there's a styles.css file in public so tools that expect it\n      // can find it.\n      fs.ensureFile(`${directory}/public/styles.css`, err => {\n        resolve(err)\n      })\n    })\n  })\n}\n"]}