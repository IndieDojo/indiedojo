{"version":3,"sources":["../../src/utils/build.js"],"names":["program","bootstrap","graphqlRunner","copyStaticDirectory","console","log","buildCSS","catch","err","process","exit","buildProductionBundle","buildHTML","apiRunnerNode","graphql","html","require","module","exports"],"mappings":";;;;;;;;;;;wEAQA,iBAAoBA,OAApB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkCC,UAAUD;AAC1C;AACA;AAFgC,aADlC;;AAAA;AAAA;AACUE,yBADV,SACUA,aADV;AAIEC;;AAEAC,oBAAQC,GAAR;AANF;AAAA,mBAOQC,SAASN,OAAT,EAAkBO,KAAlB,CAAwB,eAAO;AACnCH,sBAAQC,GAAR;AACAD,sBAAQC,GAAR,0BAAqCG,GAArC;AACAJ,sBAAQC,GAAR;AACAD,sBAAQC,GAAR,CAAYG,GAAZ;AACAC,sBAAQC,IAAR,CAAa,CAAb;AACD,aANK,CAPR;;AAAA;;AAeEN,oBAAQC,GAAR;AAfF;AAAA,mBAgBQM,sBAAsBX,OAAtB,EAA+BO,KAA/B,CAAqC,eAAO;AAChDH,sBAAQC,GAAR;AACAD,sBAAQC,GAAR,yBAAoCG,GAApC;AACAJ,sBAAQC,GAAR;AACAD,sBAAQC,GAAR,CAAYG,GAAZ;AACAC,sBAAQC,IAAR,CAAa,CAAb;AACD,aANK,CAhBR;;AAAA;;AAwBEN,oBAAQC,GAAR;AAxBF;AAAA,mBAyBQO,UAAUZ,OAAV,EAAmBO,KAAnB,CAAyB,eAAO;AACpCH,sBAAQC,GAAR;AACAD,sBAAQC,GAAR,CAAYG,GAAZ;AACAJ,sBAAQC,GAAR;AACAD,sBAAQC,GAAR;AACAD,sBAAQC,GAAR;;AAIAI,sBAAQC,IAAR,CAAa,CAAb;AACD,aAVK,CAzBR;;AAAA;AAAA;AAAA,mBAqCQG,6BAA6B,EAAEC,SAASZ,aAAX,EAA7B,CArCR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAea,I;;;;;;;AAPf,IAAMT,WAAWU,sBAAjB;AACA,IAAMJ,YAAYI,uBAAlB;AACA,IAAML,wBAAwBK,6BAA9B;AACA,IAAMf,YAAYe,uBAAlB;AACA,IAAMH,gBAAgBG,4BAAtB;AACA,IAAMb,sBAAsBa,kCAA5B;;AA0CAC,OAAOC,OAAP,GAAiBH,IAAjB","file":"build.js","sourcesContent":["/* @flow */\nconst buildCSS = require(`./build-css`)\nconst buildHTML = require(`./build-html`)\nconst buildProductionBundle = require(`./build-javascript`)\nconst bootstrap = require(`../bootstrap`)\nconst apiRunnerNode = require(`./api-runner-node`)\nconst copyStaticDirectory = require(`./copy-static-directory`)\n\nasync function html(program: any) {\n  const { graphqlRunner } = await bootstrap(program)\n  // Copy files from the static directory to\n  // an equivalent static directory within public.\n  copyStaticDirectory()\n\n  console.log(`Generating CSS`)\n  await buildCSS(program).catch(err => {\n    console.log(``)\n    console.log(`Generating CSS failed`, err)\n    console.log(``)\n    console.log(err)\n    process.exit(1)\n  })\n\n  console.log(`Compiling production bundle.js`)\n  await buildProductionBundle(program).catch(err => {\n    console.log(``)\n    console.log(`Generating JS failed`, err)\n    console.log(``)\n    console.log(err)\n    process.exit(1)\n  })\n\n  console.log(`Generating static HTML for pages`)\n  await buildHTML(program).catch(err => {\n    console.log(``)\n    console.log(err)\n    console.log(``)\n    console.log(`Generating static HTML for pages failed`)\n    console.log(\n      `See our docs page on debugging HTML builds for help https://goo.gl/yL9lND`\n    )\n\n    process.exit(1)\n  })\n\n  await apiRunnerNode(`onPostBuild`, { graphql: graphqlRunner })\n}\n\nmodule.exports = html\n"]}