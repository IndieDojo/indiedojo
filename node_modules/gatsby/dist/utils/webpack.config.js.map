{"version":3,"sources":["../../src/utils/webpack.config.js"],"names":["require","store","debug","WebpackMD5Hash","ChunkManifestPlugin","GatsbyModulePlugin","genBabelConfig","joinPath","module","exports","program","directory","suppliedStage","webpackPort","pages","output","entry","plugins","resolve","devtool","resolveLoader","root","userLoaderDirectoryPath","statSync","isDirectory","push","e","code","console","log","modulesDirectories","join","__dirname","config","loader","test","exclude","query","babelConfig","loaders","name","limit","cssModulesConf","cssModulesConfDev","stage","merge","postcss","wp","addDependencyTo","browsers","browserslist","extract","getState","extensions","optimize","OccurenceOrderPlugin","HotModuleReplacementPlugin","NoErrorsPlugin","DefinePlugin","NODE_ENV","process","env","PUBLIC_DIR","cwd","__PREFIX_PATHS__","prefixPaths","__PATH_PREFIX__","pathPrefix","NamedModulesPlugin","compilationSuccessInfo","messages","port","allChunks","components","map","page","componentChunkName","IgnorePlugin","CommonsChunkPlugin","chunks","minChunks","count","vendorModuleList","isFramework","regex","RegExp","vendor","resource","filename","manifestVariable","UglifyJsPlugin","compress","screw_ie8","warnings","mangle","comments","Error","commons","host","main","app","path","publicPath","libraryTarget","chunkFilename","babelStage","context","node","__filename","target","profile","validatedConfig"],"mappings":"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","file":"webpack.config.js","sourcesContent":["import { uniq, some } from \"lodash\"\nimport fs from \"fs\"\nimport path from \"path\"\nimport webpack from \"webpack\"\nimport Config from \"webpack-configurator\"\nimport ExtractTextPlugin from \"extract-text-webpack-plugin\"\nimport StaticSiteGeneratorPlugin from \"static-site-generator-webpack-plugin\"\nimport { StatsWriterPlugin } from \"webpack-stats-plugin\"\nimport FriendlyErrorsWebpackPlugin from \"friendly-errors-webpack-plugin\"\n\n// This isn't working right it seems.\n// import WebpackStableModuleIdAndHash from 'webpack-stable-module-id-and-hash'\nimport webpackModifyValidate from \"./webpack-modify-validate\"\n\nconst { store } = require(`../redux`)\nconst debug = require(`debug`)(`gatsby:webpack-config`)\nconst WebpackMD5Hash = require(`webpack-md5-hash`)\nconst ChunkManifestPlugin = require(`chunk-manifest-webpack-plugin`)\nconst GatsbyModulePlugin = require(`../loaders/gatsby-module-loader/plugin`)\nconst genBabelConfig = require(`./babel-config`)\nconst { joinPath } = require(`./path`)\n\n// Five stages or modes:\n//   1) develop: for `gatsby develop` command, hot reload and CSS injection into page\n//   2) develop-html: same as develop without react-hmre in the babel config for html renderer\n//   3) build-css: build styles.css file\n//   4) build-html: build all HTML files\n//   5) build-javascript: Build js chunks for Single Page App in production\n\nmodule.exports = async (\n  program,\n  directory,\n  suppliedStage,\n  webpackPort = 1500,\n  pages = []\n) => {\n  const babelStage = suppliedStage\n\n  // We combine develop & develop-html stages for purposes of generating the\n  // webpack config.\n  const stage = suppliedStage\n  const babelConfig = await genBabelConfig(program, babelStage)\n\n  debug(`Loading webpack config for stage \"${stage}\"`)\n  function output() {\n    switch (stage) {\n      case `develop`:\n        return {\n          path: directory,\n          filename: `[name].js`,\n          publicPath: `http://${program.host}:${webpackPort}/`,\n        }\n      case `build-css`:\n        // Webpack will always generate a resultant javascript file.\n        // But we don't want it for this step. Deleted by build-css.js.\n        return {\n          path: joinPath(directory, `public`),\n          filename: `bundle-for-css.js`,\n          publicPath: program.prefixPaths\n            ? `${store.getState().config.pathPrefix}/`\n            : `/`,\n        }\n      case `build-html`:\n      case `develop-html`:\n        // A temp file required by static-site-generator-plugin. See plugins() below.\n        // Deleted by build-html.js, since it's not needed for production.\n        return {\n          path: joinPath(directory, `public`),\n          filename: `render-page.js`,\n          libraryTarget: `umd`,\n          publicPath: program.prefixPaths\n            ? `${store.getState().config.pathPrefix}/`\n            : `/`,\n        }\n      case `build-javascript`:\n        return {\n          filename: `[name]-[chunkhash].js`,\n          chunkFilename: `[name]-[chunkhash].js`,\n          path: joinPath(directory, `public`),\n          publicPath: program.prefixPaths\n            ? `${store.getState().config.pathPrefix}/`\n            : `/`,\n        }\n      default:\n        throw new Error(`The state requested ${stage} doesn't exist.`)\n    }\n  }\n\n  function entry() {\n    switch (stage) {\n      case `develop`:\n        return {\n          commons: [\n            require.resolve(`react-hot-loader/patch`),\n            `${require.resolve(\n              `webpack-hot-middleware/client`\n            )}?path=http://${program.host}:${webpackPort}/__webpack_hmr&reload=true`,\n            joinPath(directory, `.cache/app`),\n          ],\n        }\n      case `develop-html`:\n        return {\n          main: joinPath(directory, `.cache/develop-static-entry`),\n        }\n      case `build-css`:\n        return {\n          main: joinPath(directory, `.cache/app`),\n        }\n      case `build-html`:\n        return {\n          main: joinPath(directory, `.cache/static-entry`),\n        }\n      case `build-javascript`:\n        return {\n          app: joinPath(directory, `.cache/production-app`),\n        }\n      default:\n        throw new Error(`The state requested ${stage} doesn't exist.`)\n    }\n  }\n\n  function plugins() {\n    switch (stage) {\n      case `develop`:\n        return [\n          new webpack.optimize.OccurenceOrderPlugin(),\n          new webpack.HotModuleReplacementPlugin(),\n          new webpack.NoErrorsPlugin(),\n          new webpack.DefinePlugin({\n            \"process.env\": {\n              NODE_ENV: JSON.stringify(\n                process.env.NODE_ENV ? process.env.NODE_ENV : `development`\n              ),\n              PUBLIC_DIR: JSON.stringify(`${process.cwd()}/public`),\n            },\n            __PREFIX_PATHS__: program.prefixPaths,\n            __PATH_PREFIX__: JSON.stringify(store.getState().config.pathPrefix),\n          }),\n          // Names module ids with their filepath. We use this in development\n          // to make it easier to see what modules have hot reloaded, etc. as\n          // the numerical IDs aren't useful. In production we use numerical module\n          // ids to reduce filesize.\n          new webpack.NamedModulesPlugin(),\n          new FriendlyErrorsWebpackPlugin({\n            compilationSuccessInfo: {\n              messages: [\n                `Your site is running at http://localhost:${program.port}`,\n                `Your graphql debugger is running at http://localhost:${program.port}/___graphql`,\n              ],\n            },\n          }),\n        ]\n      case `develop-html`:\n        return [\n          new StaticSiteGeneratorPlugin(`render-page.js`, pages),\n          new webpack.DefinePlugin({\n            \"process.env\": {\n              NODE_ENV: JSON.stringify(\n                process.env.NODE_ENV ? process.env.NODE_ENV : `development`\n              ),\n              PUBLIC_DIR: JSON.stringify(`${process.cwd()}/public`),\n            },\n            __PREFIX_PATHS__: program.prefixPaths,\n            __PATH_PREFIX__: JSON.stringify(store.getState().config.pathPrefix),\n          }),\n          new ExtractTextPlugin(`build-html-styles.css`),\n        ]\n      case `build-css`:\n        return [\n          new webpack.DefinePlugin({\n            \"process.env\": {\n              NODE_ENV: JSON.stringify(\n                process.env.NODE_ENV ? process.env.NODE_ENV : `production`\n              ),\n              PUBLIC_DIR: JSON.stringify(`${process.cwd()}/public`),\n            },\n            __PREFIX_PATHS__: program.prefixPaths,\n            __PATH_PREFIX__: JSON.stringify(store.getState().config.pathPrefix),\n          }),\n          new ExtractTextPlugin(`styles.css`, { allChunks: true }),\n        ]\n      case `build-html`:\n        return [\n          new StaticSiteGeneratorPlugin(`render-page.js`, pages),\n          new webpack.DefinePlugin({\n            \"process.env\": {\n              NODE_ENV: JSON.stringify(\n                process.env.NODE_ENV ? process.env.NODE_ENV : `production`\n              ),\n              PUBLIC_DIR: JSON.stringify(`${process.cwd()}/public`),\n            },\n            __PREFIX_PATHS__: program.prefixPaths,\n            __PATH_PREFIX__: JSON.stringify(store.getState().config.pathPrefix),\n          }),\n          new ExtractTextPlugin(`build-html-styles.css`),\n        ]\n      case `build-javascript`: {\n        // Get array of page template component names.\n        let components = store\n          .getState()\n          .pages.map(page => page.componentChunkName)\n        components = uniq(components)\n        components.push(`layout-component---index`)\n        return [\n          // Moment.js includes 100s of KBs of extra localization data by\n          // default in Webpack that most sites don't want. This line disables\n          // loading locale modules. This is a practical solution that requires\n          // the user to opt into importing specific locales.\n          // https://github.com/jmblog/how-to-optimize-momentjs-with-webpack\n          new webpack.IgnorePlugin(/^\\.\\/locale$/, /moment$/),\n          new WebpackMD5Hash(),\n          // new webpack.optimize.DedupePlugin(),\n          // Extract \"commons\" chunk from the app entry and all\n          // page components.\n          new webpack.optimize.CommonsChunkPlugin({\n            name: `commons`,\n            chunks: [`app`, ...components],\n            // The more page components there are, the higher we raise the bar\n            // for merging in page-specific JS libs into the commons chunk. The\n            // two principles here is a) keep the TTI (time to interaction) as\n            // low as possible so that means keeping commons.js small with\n            // critical framework code (e.g. React/react-router) and b) is we\n            // want to push JS parse/eval work as close as possible to when\n            // it's used. Since most people don't navigate to most pages, take\n            // tradeoff of loading/evaling modules multiple times over\n            // loading/evaling lots of unused code on the initial opening of\n            // the app.\n            minChunks: (module, count) => {\n              const vendorModuleList = [\n                `react`,\n                `react-dom`,\n                `fbjs`,\n                `react-router`,\n                `react-router-dom`,\n                `react-router-scroll`,\n                `dom-helpers`, // Used in react-router-scroll\n                `path-to-regexp`,\n                `isarray`, // Used by path-to-regexp.\n                `scroll-behavior`,\n                `history`,\n                `resolve-pathname`, // Used by history.\n                `value-equal`, // Used by history.\n                `invariant`, // Used by history.\n                `warning`, // Used by history.\n                `babel-runtime`, // Used by history.\n                `core-js`, // Used by history.\n                `loose-envify`, // Used by history.\n                `prop-types`,\n                `gatsby-link`,\n              ]\n              const isFramework = some(\n                vendorModuleList.map(vendor => {\n                  const regex = new RegExp(`\\/node_modules\\/${vendor}\\/.*`, `i`)\n                  return regex.test(module.resource)\n                })\n              )\n              return isFramework || count > 3\n            },\n          }),\n          // Add a few global variables. Set NODE_ENV to production (enables\n          // optimizations for React) and whether prefixing links is enabled\n          // (__PREFIX_PATHS__) and what the link prefix is (__PATH_PREFIX__).\n          new webpack.DefinePlugin({\n            \"process.env\": {\n              NODE_ENV: JSON.stringify(\n                process.env.NODE_ENV ? process.env.NODE_ENV : `production`\n              ),\n              PUBLIC_DIR: JSON.stringify(`${process.cwd()}/public`),\n            },\n            __PREFIX_PATHS__: program.prefixPaths,\n            __PATH_PREFIX__: JSON.stringify(store.getState().config.pathPrefix),\n          }),\n          // Extract CSS so it doesn't get added to JS bundles.\n          new ExtractTextPlugin(`build-js-styles.css`),\n          // Write out mapping between chunk names and their hashed names. We use\n          // this to add the needed javascript files to each HTML page.\n          new StatsWriterPlugin(),\n          // Extract the webpack chunk manifest out of commons.js so commons.js\n          // doesn't get changed everytime you build. This increases the cache-hit\n          // rate for commons.js.\n          new ChunkManifestPlugin({\n            filename: `chunk-manifest.json`,\n            manifestVariable: `webpackManifest`,\n          }),\n          // Minify Javascript.\n          new webpack.optimize.UglifyJsPlugin({\n            compress: {\n              screw_ie8: true, // React doesn't support IE8\n              warnings: false,\n            },\n            mangle: {\n              screw_ie8: true,\n            },\n            output: {\n              comments: false,\n              screw_ie8: true,\n            },\n          }),\n          // Ensure module order stays the same. Supposibly fixed in webpack 2.0.\n          new webpack.optimize.OccurenceOrderPlugin(),\n          new GatsbyModulePlugin(),\n          // new WebpackStableModuleIdAndHash({ seed: 9, hashSize: 47 }),\n          new webpack.NamedModulesPlugin(),\n        ]\n      }\n      default:\n        throw new Error(`The state requested ${stage} doesn't exist.`)\n    }\n  }\n\n  function resolve() {\n    const { program } = store.getState()\n    return {\n      // Use the program's extension list (generated via the\n      // 'resolvableExtensions' API hook).\n      extensions: [``, ...program.extensions],\n      // Default to using the site's node_modules directory to look for\n      // modules. But also make it possible to install modules within the src\n      // directory if you need to install a specific version of a module for a\n      // part of your site.\n      modulesDirectories: [\n        joinPath(directory, `node_modules`),\n        `node_modules`,\n        joinPath(directory, `node_modules`, `gatsby`, `node_modules`),\n      ],\n    }\n  }\n\n  function devtool() {\n    switch (stage) {\n      case `develop`:\n        return `cheap-module-source-map`\n      case `build-html`:\n      case `develop-html`:\n        return false\n      case `build-javascript`:\n        return `source-map`\n      default:\n        return false\n    }\n  }\n\n  function module(config) {\n    // Common config for every env.\n    config.loader(`js`, {\n      test: /\\.jsx?$/, // Accept either .js or .jsx files.\n      exclude: /(node_modules|bower_components)/,\n      loader: `babel`,\n      query: babelConfig,\n    })\n    config.loader(`json`, {\n      test: /\\.json$/,\n      loaders: [`json`],\n    })\n    config.loader(`yaml`, {\n      test: /\\.ya?ml/,\n      loaders: [`json`, `yaml`],\n    })\n\n    // \"file\" loader makes sure those assets end up in the `public` folder.\n    // When you `import` an asset, you get its filename.\n    config.loader(`file-loader`, {\n      test: /\\.(ico|eot|otf|webp|ttf|woff(2)?)(\\?.*)?$/,\n      loader: `file`,\n      query: {\n        name: `static/[name].[hash:8].[ext]`,\n      },\n    })\n    // \"url\" loader works just like \"file\" loader but it also embeds\n    // assets smaller than specified size as data URLs to avoid requests.\n    config.loader(`url-loader`, {\n      test: /\\.(svg|jpg|jpeg|png|gif|mp4|webm|wav|mp3|m4a|aac|oga)(\\?.*)?$/,\n      loader: `url`,\n      query: {\n        limit: 10000,\n        name: `static/[name].[hash:8].[ext]`,\n      },\n    })\n\n    const cssModulesConf = `css?modules&minimize&importLoaders=1`\n    const cssModulesConfDev = `${cssModulesConf}&sourceMap&localIdentName=[name]---[local]---[hash:base64:5]`\n\n    switch (stage) {\n      case `develop`:\n        config.loader(`css`, {\n          test: /\\.css$/,\n          exclude: /\\.module\\.css$/,\n          loaders: [`style`, `css`, `postcss`],\n        })\n\n        // CSS modules\n        config.loader(`cssModules`, {\n          test: /\\.module\\.css$/,\n          loaders: [`style`, cssModulesConfDev, `postcss`],\n        })\n\n        config.merge({\n          postcss(wp) {\n            return [\n              require(`postcss-import`)({ addDependencyTo: wp }),\n              require(`postcss-cssnext`)({ browsers: program.browserslist }),\n              require(`postcss-browser-reporter`),\n              require(`postcss-reporter`),\n            ]\n          },\n        })\n        return config\n\n      case `build-css`:\n        config.loader(`css`, {\n          test: /\\.css$/,\n          exclude: /\\.module\\.css$/,\n          loader: ExtractTextPlugin.extract([`css?minimize`, `postcss`]),\n        })\n\n        // CSS modules\n        config.loader(`cssModules`, {\n          test: /\\.module\\.css$/,\n          loader: ExtractTextPlugin.extract(`style`, [\n            cssModulesConf,\n            `postcss`,\n          ]),\n        })\n        config.merge({\n          postcss: [\n            require(`postcss-import`)(),\n            require(`postcss-cssnext`)({\n              browsers: program.browserslist,\n            }),\n          ],\n        })\n        return config\n\n      case `build-html`:\n      case `develop-html`:\n        // We don't deal with CSS at all when building the HTML.\n        // The 'null' loader is used to prevent 'module not found' errors.\n        // On the other hand CSS modules loaders are necessary.\n\n        config.loader(`css`, {\n          test: /\\.css$/,\n          exclude: /\\.module\\.css$/,\n          loader: `null`,\n        })\n\n        // CSS modules\n        config.loader(`cssModules`, {\n          test: /\\.module\\.css$/,\n          loader: ExtractTextPlugin.extract(`style`, [\n            cssModulesConf,\n            `postcss`,\n          ]),\n        })\n\n        return config\n\n      case `build-javascript`:\n        // we don't deal with css at all when building the javascript.  but\n        // still need to process the css so offline-plugin knows about the\n        // various assets referenced in your css.\n        //\n        // It's also necessary to process CSS Modules so your JS knows the\n        // classNames to use.\n\n        config.loader(`css`, {\n          test: /\\.css$/,\n          exclude: /\\.module\\.css$/,\n          // loader: `null`,\n          loader: ExtractTextPlugin.extract([`css`]),\n        })\n\n        // CSS modules\n        config.loader(`cssModules`, {\n          test: /\\.module\\.css$/,\n          loader: ExtractTextPlugin.extract(`style`, [\n            cssModulesConf,\n            `postcss`,\n          ]),\n        })\n\n        return config\n\n      default:\n        return config\n    }\n  }\n\n  function resolveLoader() {\n    const root = [path.resolve(directory, `node_modules`)]\n\n    const userLoaderDirectoryPath = path.resolve(directory, `loaders`)\n\n    try {\n      if (fs.statSync(userLoaderDirectoryPath).isDirectory()) {\n        root.push(userLoaderDirectoryPath)\n      }\n    } catch (e) {\n      if (e && e.code !== `ENOENT`) {\n        console.log(e)\n      }\n    }\n\n    return {\n      root,\n      modulesDirectories: [path.join(__dirname, `../loaders`), `node_modules`],\n    }\n  }\n\n  const config = new Config()\n\n  config.merge({\n    // Context is the base directory for resolving the entry option.\n    context: directory,\n    node: {\n      __filename: true,\n    },\n    entry: entry(),\n    debug: true,\n    // Certain \"isomorphic\" packages have different entry points for browser\n    // and server (see\n    // https://github.com/defunctzombie/package-browser-field-spec); setting\n    // the target tells webpack which file to include, ie. browser vs main.\n    target: (stage === `build-html` || stage === `develop-html`) ? `node` : `web`,\n    profile: stage === `production`,\n    devtool: devtool(),\n    output: output(),\n    resolveLoader: resolveLoader(),\n    plugins: plugins(),\n    resolve: resolve(),\n  })\n\n  module(config, stage)\n\n  // Use the suppliedStage again to let plugins distinguish between\n  // server rendering the html.js and the frontend development config.\n  const validatedConfig = await webpackModifyValidate(config, suppliedStage)\n\n  return validatedConfig\n}\n"]}