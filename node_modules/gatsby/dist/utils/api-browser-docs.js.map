{"version":3,"sources":["../../src/utils/api-browser-docs.js"],"names":["exports","onClientEntry","onRouteUpdate","shouldUpdateScroll","replaceRouterComponent","wrapRootComponent"],"mappings":";;AAAA;;;;;;;;AAQAA,QAAQC,aAAR,GAAwB,IAAxB;;AAEA;;;;;;;;;;AAUAD,QAAQE,aAAR,GAAwB,IAAxB;;AAEA;;;;;;;AAOAF,QAAQG,kBAAR,GAA6B,IAA7B;;AAEA;;;;;AAKAH,QAAQI,sBAAR,GAAiC,IAAjC;;AAEA;;;;;AAKAJ,QAAQK,iBAAR,GAA4B,IAA5B","file":"api-browser-docs.js","sourcesContent":["/**\n * Called when the Gatsby browser runtime first starts.\n * @example\n * exports.onClientEntry = () => {\n *   console.log(\"We've started!\")\n *   callAnalyticsAPI()\n * }\n */\nexports.onClientEntry = true\n\n/**\n * Called when the user changes routes\n * @param {object} $0\n * @param {object} $0.location A location object\n * @param {object} $0.action The \"action\" that caused the route change\n * @example\n * exports.onRouteUpdate = ({ location }) => {\n *   console.log('new pathname', location.pathname)\n * }\n */\nexports.onRouteUpdate = true\n\n/**\n * Allow a plugin to decide if the \"scroll\" should update or\n * not on a route change.\n * @param {object} $0\n * @param {object} $0.prevRouterProps The previous state of the router before the route change.\n * @param {object} $0.pathname The new pathname\n */\nexports.shouldUpdateScroll = true\n\n/**\n * Allow a plugin to replace the router component e.g. to use a custom history version.\n * @param {object} $0\n * @param {object} $0.history The history instance to use in the replacement router instance\n */\nexports.replaceRouterComponent = true\n\n/**\n * Allow a plugin to wrap the root component.\n * @param {object} $0\n * @param {object} $0.Root The \"Root\" component built by Gatsby.\n */\nexports.wrapRootComponent = true\n"]}