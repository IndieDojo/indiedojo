{"version":3,"sources":["../../src/utils/webpack-modify-validate.js"],"names":["config","stage","isObject","isFunction","resolve","validationState","returnValidation","error","console","log","details","forEach","err","index","path","type","message","process","exit","ValidateWebpackConfig"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;wEAEgB,iBAAqCA,MAArC,EAA6CC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAER,oDAAqC,EAAED,cAAF,EAAUC,YAAV;;AAE3C;;AAFM,aAFQ;;AAAA;AAMd,qCACE,iBAAEC,QAAF,CAAWF,MAAX,KAAsB,iBAAEG,UAAF,CAAaH,OAAOI,OAApB,CADxB,gHAIcJ,MAJd,qBAKWC,KALX;;AASMI,2BAfQ,GAeU,gCAASL,OAAOI,OAAP,EAAT,EAA2B;AACjDE,gCAAkB;AAD+B,aAA3B,CAfV;;AAAA,gBAmBTD,gBAAgBE,KAnBP;AAAA;AAAA;AAAA;;AAAA,6CAoBLP,MApBK;;AAAA;;AAuBdQ,oBAAQC,GAAR;AACAJ,4BAAgBE,KAAhB,CAAsBG,OAAtB,CAA8BC,OAA9B,CAAsC,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACpDL,sBAAQC,GAAR,QAAgBI,QAAQ,CAAxB;AACAL,sBAAQC,GAAR,CAAYG,IAAIE,IAAhB;AACAN,sBAAQC,GAAR,CAAYG,IAAIG,IAAhB,OAA2BH,IAAII,OAA/B;AACAR,sBAAQC,GAAR;AACD,aALD;;AAxBc,6CA+BPQ,QAAQC,IAAR,CAAa,CAAb,CA/BO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeC,qB;;;;SAAAA,qB","file":"webpack-modify-validate.js","sourcesContent":["import _ from \"lodash\"\nimport invariant from \"invariant\"\nimport path from \"path\"\nimport validate from \"webpack-validator\"\nimport apiRunnerNode from \"./api-runner-node\"\n\nexport default (async function ValidateWebpackConfig(config, stage) {\n  // We don't care about the return as plugins just mutate the config directly.\n  await apiRunnerNode(`modifyWebpackConfig`, { config, stage })\n\n  // console.log(JSON.stringify(config, null, 4))\n\n  invariant(\n    _.isObject(config) && _.isFunction(config.resolve),\n    `\n    You must return an webpack-configurator instance when modifying the Webpack config.\n    Returned: ${config}\n    stage: ${stage}\n    `\n  )\n\n  const validationState = validate(config.resolve(), {\n    returnValidation: true,\n  })\n\n  if (!validationState.error) {\n    return config\n  }\n\n  console.log(`There were errors with your webpack config:`)\n  validationState.error.details.forEach((err, index) => {\n    console.log(`[${index + 1}]`)\n    console.log(err.path)\n    console.log(err.type, `,`, err.message)\n    console.log(`\\n`)\n  })\n\n  return process.exit(1)\n})\n"]}